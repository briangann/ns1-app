{"version":3,"sources":["../../../src/components/snaptask/snaptask_add.js"],"names":["_","SnapTaskAddCtrl","$scope","$injector","$q","$location","backendSrv","alertSrv","pageReady","creatingTasks","error","zones","monitoringJobs","taskType","newTask","queuedTask","ns1Token","getConfig","getZones","getMonitoringJobs","newTak","self","get","then","resp","jsonData","push","type","zone","jobId","job","id","name","promises","forEach","task","addZoneTask","addMonitorTask","all","console","log","path","set","post","meta","code","message","reject","jobName","taskName","templateUrl"],"mappings":"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","file":"snaptask_add.js","sourcesContent":["import _ from 'lodash';\n\nclass SnapTaskAddCtrl {\n  constructor($scope, $injector, $q, $location, backendSrv, alertSrv) {\n    this.$q = $q;\n    this.$location = $location;\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$scope = $scope;\n    this.pageReady = true;\n    this.creatingTasks = false;\n    this.error = null;\n    this.zones = [];\n    this.monitoringJobs = [];\n    this.taskType = \"\";\n    this.newTask = {};\n    this.queuedTask = [];\n    this.ns1Token = null;\n    this.getConfig();\n    this.getZones();\n    this.getMonitoringJobs();\n  }\n\n  cancel() {\n    this.queuedTask = [];\n    this.newTak = {};\n    this.taskType = \"\";\n  }\n\n  getConfig() {\n    var self = this;\n    this.backendSrv.get(\"api/plugins/ns1-app/settings\").then((resp) => {\n      self.ns1Token = resp.jsonData.ns1Token;\n      if (self.ns1Token) {\n        self.pageReady = true;\n      } else {\n        self.error =\"NS1 Api Key not configured.\";\n      }\n    })\n  }\n\n  addTask() {\n    if (this.taskType == \"zone\") {\n      this.queuedTask.push({\n        type: \"zone\",\n        zone: this.newTask.zone\n      });\n    }\n    if (this.taskType == \"monitor\") {\n      this.queuedTask.push({\n        type: \"monitoring\",\n        jobId: this.newTask.job.id,\n        name: this.newTask.job.name,\n      });\n    }\n    this.newTask = {};\n  }\n\n  getZones() {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/ns1-app/ns1/zones').then((resp) =>{\n        self.zones = resp;\n    });\n  }\n  getMonitoringJobs() {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/ns1-app/ns1/monitoring/jobs').then((resp) =>{\n        self.monitoringJobs = resp;\n    });\n  }\n\n  create() {\n    var self = this;\n    this.creatingTasks = true;\n    var promises = [];\n    _.forEach(this.queuedTask, function(task) {\n      if (task.type === \"zone\") {\n        promises.push(self.addZoneTask(task.zone));\n      }\n      if (task.type === \"monitoring\") {\n        promises.push(self.addMonitorTask(task.jobId, task.name));\n      }\n    });\n\n    this.$q.all(promises).then(()=>{\n      console.log(\"finished creating tasks.\");\n      self.queuedTask = [];\n      self.creatingTasks = false;\n      self.$location.path(\"plugins/ns1-app/page/list-tasks\");\n    }, (resp)=>{\n      console.log(\"failed to add all tasks.\", resp);\n      self.creatingTasks = false;\n      self.alertSrv.set(\"failed to create task\", resp, 'error', 10000);\n    });\n  }\n\n  addZoneTask(zone) {\n\n    var task = {\n      \"name\": \"ns1-zone-\"+zone,\n      \"metrics\": {\"/raintank/apps/ns1/zones/*\":0},\n      \"config\": {\n        \"/raintank/apps/ns1\": {\n          \"ns1_key\": this.ns1Token,\n          \"zone\": zone\n        }\n      },\n      \"interval\": 300,\n      \"route\": { \"type\": \"any\"},\n      \"enabled\": true\n    };\n\n    return this.backendSrv.post(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        console.log(\"request failed.\", resp.meta.message);\n        return this.$q.reject(resp.meta.message);\n      }\n    });\n  }\n  addMonitorTask(jobId, jobName) {\n    var taskName = \"ns1-monitoring-\"+jobId;\n    var task = {\n      \"name\": \"ns1-monitoring-\"+jobId,\n      \"metrics\": {\"/raintank/apps/ns1/monitoring/*\":0},\n      \"config\": {\n        \"/raintank/apps/ns1\": {\n          \"ns1_key\": this.ns1Token,\n          \"jobId\": jobId,\n          \"jobName\": jobName,\n        }\n      },\n      \"interval\": 300,\n      \"route\": { \"type\": \"any\"},\n      \"enabled\": true\n    };\n\n    return this.backendSrv.post(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        console.log(\"request failed.\", resp.meta.message);\n        return this.$q.reject(resp.meta.message);\n      }\n    });\n  }\n}\n\nSnapTaskAddCtrl.templateUrl = 'public/plugins/ns1-app/components/snaptask/partials/snaptask_add.html';\nexport {SnapTaskAddCtrl};\n"]}